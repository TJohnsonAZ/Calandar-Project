# D.4 Implementation 1  

### Introduction  
- Describe system  
    - Should include value proposition and main features  
    - At the end include GitHub and Trello links  

### Implementation Requirements  
- List of requirements (user stories, issues, or use cases) implemented in this release  
    - Must have features specified in MVP from D2  
- Break down coding assignments by group members  
- Use issue tracker to manage implementation tasks (they will check)  

### Adopted Technologies  
##### Android Studio (Front End)  
    - What is it?  
        - Official IDE for Android Development  
        - Based on IntelliJ IDEA  
        - Gradle-based build system  
    - Why did we choose it?  
        - Android platform is easier to work with than Apple/Xcode  
        - Built in compiler (Xcode requires a build stage)  
        - Primarily Java based  
            - Comfortable language choice for the group  
	- XML very similar to HTML  
	
#### Spring Boot (Back End)
    - What is it?
        - Open source framework
        - Built on top of the Spring Framework
        - Includes dependencies to shorten code length and simplifying Spring set up
        - Allows development of enterprise-class applications
        - Utilizes the Tomcat servlet container
    - Why did we choose it?
        - Website packages all dependencies into a zip file making set up very easy
        - Industry professional recommended it for our application
        - Extensive documentation and reference material available online
#### Gradle
    - What is it?
    - Why did we choose it?
        - Built in to Android Studio
#### Maven
    - What is it?  
      - Simple to use for our requirements
      - Easy to deploy executable
      - Integration with Spring  
    - Why did we choose it?
        - To learn multiple technologies (in addition to Gradle)
	
	
### Learning/Training
####- To Learn:  
Each side of this project (front-end/back-end) had one major developmental tool to learn. The front-end had to learn the tricks of Android Studio, while the back-end had to learn Spring. 

####- To Train:  


### Deployment
- How is the program being deployed?
- Link for system in production

### Licensing
- Look into this
    - Links on D4 page probably explain more

### Readme File
- Create readme file with a bunch of stuff

### Look & Feel
- Approach used to design user interface

### Lessons Learned
- What did we learn during the first release
- What can we improve on for the second release

### Demo
- Video demo link
